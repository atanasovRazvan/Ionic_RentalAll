[{"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\index.tsx":"1","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\serviceWorker.ts":"2","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\App.tsx":"3","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\ItemProvider.tsx":"4","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\index.tsx":"5","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\auth\\index.tsx":"6","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\itemApi.tsx":"7","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\auth\\AuthProvider.tsx":"8","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\ItemEdit.tsx":"9","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\ItemList.tsx":"10","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\auth\\PrivateRoute.tsx":"11","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\auth\\Login.tsx":"12","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\core\\index.tsx":"13","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\Item.tsx":"14","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\auth\\AuthApi.tsx":"15","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\utilities\\MyMap.tsx":"16","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\utilities\\mapsApiKey.ts":"17","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\utilities\\usePhotoGallery.ts":"18"},{"size":528,"mtime":1607803064397,"results":"19","hashOfConfig":"20"},{"size":5213,"mtime":1600535081000,"results":"21","hashOfConfig":"20"},{"size":1617,"mtime":1607590366343,"results":"22","hashOfConfig":"20"},{"size":8889,"mtime":1607814549922,"results":"23","hashOfConfig":"20"},{"size":100,"mtime":1607590345370,"results":"24","hashOfConfig":"20"},{"size":92,"mtime":1606837537310,"results":"25","hashOfConfig":"20"},{"size":2250,"mtime":1607814715798,"results":"26","hashOfConfig":"20"},{"size":3661,"mtime":1607378297464,"results":"27","hashOfConfig":"20"},{"size":5596,"mtime":1607814315358,"results":"28","hashOfConfig":"20"},{"size":6830,"mtime":1607811254243,"results":"29","hashOfConfig":"20"},{"size":832,"mtime":1607032283888,"results":"30","hashOfConfig":"20"},{"size":1795,"mtime":1607032285590,"results":"31","hashOfConfig":"20"},{"size":814,"mtime":1606870206159,"results":"32","hashOfConfig":"20"},{"size":1306,"mtime":1607814498594,"results":"33","hashOfConfig":"20"},{"size":385,"mtime":1606947981300,"results":"34","hashOfConfig":"20"},{"size":1058,"mtime":1607798489841,"results":"35","hashOfConfig":"20"},{"size":69,"mtime":1607798496325,"results":"36","hashOfConfig":"20"},{"size":2482,"mtime":1607814379394,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ecb3n0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\index.tsx",[],["80","81"],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\serviceWorker.ts",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\App.tsx",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\ItemProvider.tsx",["82","83","84","85"],"import React, { useCallback, useEffect, useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { getLogger } from '../core';\nimport { ItemProps } from './ItemProps';\nimport { createItem, deleteITEM, getItem, getItems, newWebSocket, updateItem } from './itemApi';\nimport { Plugins } from '@capacitor/core';\nimport { AuthContext } from '../auth';\n\nconst { Network } = Plugins;\nconst {Storage} = Plugins;\n\nconst log = getLogger('ItemProvider');\n\ntype SaveItemFn = (item: ItemProps) => Promise<any>;\ntype DeleteItemFn = (id?: String) => Promise<any>;\n\nexport interface ItemsState {\n  items?: ItemProps[],\n  conflictualItems?: ItemProps[],\n  fetching: boolean,\n  fetchingError?: Error | null,\n  saving: boolean,\n  deleting: boolean,\n  deletingError?: Error | null,\n  savingError?: Error | null,\n  savingPending: boolean,\n  saveItem?: SaveItemFn,\n  deleteItem?: DeleteItemFn,\n}\n\ninterface ActionProps {\n  type: string,\n  payload?: any,\n}\n\nconst initialState: ItemsState = {\n  fetching: false,\n  saving: false,\n  deleting: false,\n  savingPending: false\n};\n\nconst FETCH_ITEMS_STARTED = 'FETCH_ITEMS_STARTED';\nconst FETCH_ITEMS_SUCCEEDED = 'FETCH_ITEMS_SUCCEEDED';\nconst FETCH_ITEMS_FAILED = 'FETCH_ITEMS_FAILED';\nconst SAVE_ITEM_STARTED = 'SAVE_ITEM_STARTED';\nconst SAVE_ITEM_SUCCEEDED = 'SAVE_ITEM_SUCCEEDED';\nconst SAVE_ITEM_FAILED = 'SAVE_ITEM_FAILED';\nconst DELETE_ITEM_STARTED = 'DELETE_ITEM_STARTED';\nconst DELETE_ITEM_SUCCEEDED = 'DELETE_ITEM_SUCCEDED';\nconst DELETE_ITEM_FAILED = 'DELETE_ITEM_FAILED';\nconst SAVING_PENDING = 'SAVING_PENDING';\n\nlet idOfDeleted : String | undefined;\n\nconst reducer: (state: ItemsState, action: ActionProps) => ItemsState =\n  (state, { type, payload }) => {\n    switch (type) {\n      case FETCH_ITEMS_STARTED:\n        return { ...state, fetching: true, fetchingError: null };\n      case FETCH_ITEMS_SUCCEEDED:\n        return { ...state, items: payload.items, fetching: false };\n      case FETCH_ITEMS_FAILED:\n        return { ...state, items: payload.items, fetchingError: payload.error, fetching: false };\n      case SAVE_ITEM_STARTED:\n        return { ...state, savingError: null, saving: true };\n      case SAVE_ITEM_SUCCEEDED:{\n        const items = [...(state.items || [])];\n        const item = payload.item;\n        const index = items.findIndex(it => it.id === item.id);\n        if (index === -1) {\n          items.splice(0, 0, item);\n        } else {\n          items[index] = item;\n        }\n        return { ...state, items, saving: false, savingPending: false };\n      }\n      case SAVE_ITEM_FAILED:{\n        const items = [...(state.items || [])];\n        const item = payload.item;\n        item.status = false;\n        const index = items.findIndex(it => it.id === item.id);\n        if (index === -1) {\n          items.splice(0, 0, item);\n        } else {\n          items[index] = item;\n        }\n        return { ...state, items, savingError: payload.error, saving: false, savingPending: false };\n      }\n      case SAVING_PENDING:{\n        return { ...state, conflictualItems: payload.conflictualItems, savingPending: true};\n      }\n      case DELETE_ITEM_STARTED:\n        return { ...state, deletingError: null, deleting: true}\n      case DELETE_ITEM_SUCCEEDED:{\n        const items = [...(state.items || [])];\n        const index = items.findIndex(it => it.id === idOfDeleted)\n        log(idOfDeleted)\n        if(index !== -1){\n          items.splice(index, 1)\n        }\n        return { ...state, items, deleting: false };\n      }\n      case DELETE_ITEM_FAILED:\n        return { ...state, deletingError: payload.error, deleting: false };\n      default:\n        return state;\n    }\n  };\n\nexport const ItemContext = React.createContext<ItemsState>(initialState);\n\ninterface ItemProviderProps {\n  children: PropTypes.ReactNodeLike,\n}\n\nexport const ItemProvider: React.FC<ItemProviderProps> = ({ children }) => {\n\n  const { token } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { items, conflictualItems, fetching, fetchingError, saving, savingPending, deleting, savingError } = state;\n  useEffect(getItemsEffect, [token]);\n  useEffect(networkStatusEffect, []);\n  useEffect(wsEffect, [token]);\n  const saveItem = useCallback<SaveItemFn>(saveItemCallback, [token]);\n  const deleteItem = useCallback<DeleteItemFn>(deleteItemCallback, [token]);\n  const value = { items, conflictualItems, fetching, fetchingError, saving, savingPending, deleting, savingError, saveItem, deleteItem };\n  log('returns');\n  return (\n    <ItemContext.Provider value={value}>\n      {children}\n    </ItemContext.Provider>\n  );\n\n  function networkStatusEffect() {\n    Network.addListener(\"networkStatusChange\", status => {\n      log(\"Network status changed: \", status);\n\n      tryToUpdateItems();\n\n    async function tryToUpdateItems() {\n      const status = await Network.getStatus();\n      if(status.connected === true){\n        const { keys } = await Storage.keys();\n        for(let i = 0; i < keys.length; i ++)\n          if(keys[i].startsWith(\"item_save\")){\n            const toUpdate = await Storage.get({key: keys[i]});\n            const toUpdateItem = JSON.parse(toUpdate.value || '{}');\n            toUpdateItem.id = keys[i].split(\"save\")[1];\n\n            const existingItem = await getItem(toUpdateItem.id);\n            if(existingItem.version !== toUpdateItem.version + 1){\n              saveItemCallback(toUpdateItem);\n            }\n            else{\n              toUpdateItem.id = toUpdateItem.id + \"_1\";\n              existingItem.id = existingItem.id + \"_2\";\n              const conflictualItems = [toUpdateItem, existingItem];\n              dispatch({type: SAVING_PENDING, payload: { conflictualItems }});\n            }\n            await Storage.remove({key: keys[i]});\n          }\n      }\n    }\n\n    })\n  }\n\n  function getItemsEffect() {\n    let canceled = false;\n    fetchItems();\n    return () => {\n      canceled = true;\n    }\n\n    async function fetchItems() {\n      if(!token?.trim()){\n        return;\n      }\n      try {\n        log('fetchItems started');\n        dispatch({ type: FETCH_ITEMS_STARTED });\n        const items = await getItems((await Storage.get({key: 'token'})).value);\n\n        log('fetchItems succeeded');\n        if (!canceled) {\n          dispatch({ type: FETCH_ITEMS_SUCCEEDED, payload: { items } });\n        }\n\n        let allItems = {...items};\n\n        for(let i = 0; i < items.length; i ++)\n          await Storage.set({\n            key: \"item\" + allItems[i].id,\n            value: JSON.stringify({\n              description: allItems[i].description,\n              price: allItems[i].price,\n              priceEstimation: allItems[i].priceEstimation,\n              ownerUsername: allItems[i].ownerUsername,\n              version: allItems[i].version,\n              status: true,\n              lat: allItems[i].lat,\n              lng: allItems[i].lng,\n              photoPath: allItems[i].photoPath\n            })\n          });\n\n      } catch (error) {\n        log('fetchItems failed');\n        \n        const { keys } = await Storage.keys();\n        let allItems = new Array();\n\n        for(let i = 0; i < keys.length; i ++)\n          if(keys[i] !== 'token'){\n            const ret = await Storage.get({key: keys[i]});\n            const result = JSON.parse(ret.value || '{}');\n            allItems.push(result)\n          }\n\n        const items = allItems;\n\n        dispatch({ type: FETCH_ITEMS_FAILED, payload: { items, error } });\n\n      }\n    }\n  }\n\n  async function saveItemCallback(item: ItemProps) {\n    try {\n      log('saveItem started');\n      dispatch({ type: SAVE_ITEM_STARTED });\n      const savedItem = await (item.id ? updateItem(item) : createItem(item));\n      log('saveItem succeeded');\n      dispatch({ type: SAVE_ITEM_SUCCEEDED, payload: { item: savedItem }, });\n    } catch (error) {\n      log('saveItem failed');\n      dispatch({ type: SAVE_ITEM_FAILED, payload: { item, error } });\n    }\n  }\n\n  async function deleteItemCallback(id?: String){\n    try{\n      log('deleteItem started');\n      dispatch({type: DELETE_ITEM_STARTED});\n      const deletedItem = await (deleteITEM(id));\n      idOfDeleted = id;\n      dispatch({type: DELETE_ITEM_SUCCEEDED})\n      log('deleteItem succeeded');\n    }catch(error){\n      log('deleteItem failed');\n      dispatch({type: DELETE_ITEM_FAILED});\n    }\n  }\n\n  function wsEffect() {\n    let canceled = false;\n    log('wsEffect - connecting');\n    const closeWebSocket = newWebSocket(message => {\n      if (canceled) {\n        return;\n      }\n      const { event, payload: { item }} = message;\n      log(`ws message, item ${event}`);\n      if (event === 'created' || event === 'updated') {\n        dispatch({ type: SAVE_ITEM_SUCCEEDED, payload: { item } });\n      }\n    });\n    return () => {\n      log('wsEffect - disconnecting');\n      canceled = true;\n      closeWebSocket();\n    }\n  }\n};\n","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\index.tsx",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\auth\\index.tsx",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\itemApi.tsx",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\auth\\AuthProvider.tsx",["86","87","88"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogger } from '../core';\r\nimport { login as loginApi } from './AuthApi';\r\nimport { Plugins } from '@capacitor/core';\r\n\r\nconst log = getLogger('AuthProvider');\r\n\r\ntype LoginFn = (username?: string, password?: string) => void;\r\ntype LogoutFn = () => void;\r\n\r\nconst { Storage } = Plugins;\r\n\r\nexport interface AuthState {\r\n  authenticationError: Error | null;\r\n  isAuthenticated: boolean;\r\n  isAuthenticating: boolean;\r\n  login?: LoginFn;\r\n  logout?: LogoutFn;\r\n  pendingAuthentication?: boolean;\r\n  username?: string;\r\n  password?: string;\r\n  token: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  isAuthenticating: false,\r\n  authenticationError: null,\r\n  pendingAuthentication: false,\r\n  token: \"\",\r\n};\r\n\r\nexport const AuthContext = React.createContext<AuthState>(initialState);\r\n\r\ninterface AuthProviderProps {\r\n  children: PropTypes.ReactNodeLike,\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [state, setState] = useState<AuthState>(initialState);\r\n  const { isAuthenticated, isAuthenticating, authenticationError, pendingAuthentication, token } = state;\r\n  const login = useCallback<LoginFn>(loginCallback, []);\r\n  const logout = useCallback<LogoutFn>(logoutCallBack, []);\r\n  useEffect(authenticationEffect, [pendingAuthentication]);\r\n  const value = { isAuthenticated, login, logout, isAuthenticating, authenticationError, token };\r\n  log('render');\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n\r\n  function loginCallback(username?: string, password?: string): void {\r\n    log('login');\r\n    setState({\r\n      ...state,\r\n      pendingAuthentication: true,\r\n      username,\r\n      password\r\n    });\r\n  }\r\n\r\n  function logoutCallBack(): void {\r\n    log(\"logout\");\r\n    setState({\r\n      ...state,\r\n      isAuthenticated: false,\r\n      token:\"\",\r\n\r\n    });\r\n    (async () =>{\r\n      await Storage.clear();\r\n    })();\r\n  }\r\n\r\n  function authenticationEffect() {\r\n    let canceled = false;\r\n    authenticate();\r\n    return () => {\r\n      canceled = true;\r\n    }\r\n\r\n    async function authenticate() {\r\n\r\n      var tokenStorage = await Storage.get({key: \"token\"});\r\n      if (tokenStorage.value) {\r\n        setState({\r\n            ...state,\r\n            token: tokenStorage.value,\r\n            pendingAuthentication: false,\r\n            isAuthenticated: true,\r\n            isAuthenticating: false,\r\n        });\r\n      }\r\n\r\n      if (!pendingAuthentication) {\r\n        log('authenticate, !pendingAuthentication, return');\r\n        return;\r\n      }\r\n      try {\r\n        log('authenticate...');\r\n        setState({\r\n          ...state,\r\n          isAuthenticating: true,\r\n        });\r\n        const { username, password } = state;\r\n        const { token } = await loginApi(username, password);\r\n        console.log(token);\r\n\r\n        if (canceled) {\r\n          return;\r\n        }\r\n        log('authenticate succeeded');\r\n\r\n        await Storage.set({\r\n          key: 'token',\r\n          value: token \r\n        });\r\n\r\n        setState({\r\n          ...state,\r\n          token,\r\n          pendingAuthentication: false,\r\n          isAuthenticated: true,\r\n          isAuthenticating: false,\r\n        });\r\n      } catch (error) {\r\n        if (canceled) {\r\n          return;\r\n        }\r\n        log('authenticate failed');\r\n        setState({\r\n          ...state,\r\n          authenticationError: error,\r\n          pendingAuthentication: false,\r\n          isAuthenticating: false,\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\ItemEdit.tsx",["89","90","91"],"import React, { useContext, useEffect, useState } from 'react';\nimport {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonInput,\n  IonLoading,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonLabel,\n  IonFab,\n  IonFabButton,\n  IonIcon,\n  IonImg,\n  IonActionSheet\n} from '@ionic/react';\nimport { getLogger } from '../core';\nimport { ItemContext } from './ItemProvider';\nimport { RouteComponentProps } from 'react-router';\nimport { ItemProps } from './ItemProps';\nimport { trashBin, camera, trash, close } from 'ionicons/icons';\nimport { MyMap } from '../utilities/MyMap';\nimport { usePhotoGallery, Photo } from '../utilities/usePhotoGallery';\n\nconst log = getLogger('ItemEdit');\n\nfunction mapLog(source: string){\n  return (e:any) => console.log(source, e.latLng.lat(), e.latLng.lng());\n}\n\ninterface ItemEditProps extends RouteComponentProps<{\n  id?: string;\n}> {}\n\nconst ItemEdit: React.FC<ItemEditProps> = ({ history, match }) => {\n  const { items, saving, deleting, savingPending, savingError, saveItem, deleteItem } = useContext(ItemContext);\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [priceEstimation, setPriceEstimation] = useState('');\n  const [ownerUsername, setOwner] = useState('');\n  const [version, setVersion] = useState(0);\n  const [status, setStatus] = useState(true);\n  const [lat, setLat] = useState(47.29341652941491);\n  const [lng, setLng] = useState(24.15388570663447);\n  const [photoPath, setPhotoPath] = useState('');\n  const [item, setItem] = useState<ItemProps>();\n  const [photoToDelete, setPhotoToDelete] = useState<Photo>();\n  const { photos, takePhoto, deletePhoto} = usePhotoGallery();\n  useEffect(() => {\n    log('useEffect');\n    const routeId = match.params.id || '';\n    const item = items?.find(it => it.id === routeId);\n    setItem(item);\n    if (item) {\n      setDescription(item.description);\n      setPrice(item.price);\n      setPriceEstimation(item.priceEstimation);\n      setOwner(item.ownerUsername);\n      setVersion(item.version);\n      setStatus(item.status);\n      setLat(item.lat);\n      setLng(item.lng);\n      console.log(photoPath);\n      setPhotoPath(item.photoPath);\n      console.log(photoPath);\n    }\n  }, [match.params.id, items]);\n  const handleSave = () => {\n    const editedItem = item ? { ...item, description, price, priceEstimation, ownerUsername, version, status, lat, lng, photoPath } : { description, price, priceEstimation, ownerUsername, version, status, lat, lng, photoPath };\n    saveItem && saveItem(editedItem).then(() => history.goBack());\n  };\n  const handleDelete = () => {\n    deleteItem && deleteItem(item?.id).then(() => history.goBack());\n  }\n  const setMapPosition = (e: any) => {\n    setLat(e.latLng.lat());\n    setLng(e.latLng.lng());\n  }\n\n  log('render');\n  \n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Edit</IonTitle>\n          <IonButtons slot=\"end\">\n            <IonButton onClick={handleSave}>\n              Save\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n          <IonLabel>Description: </IonLabel><IonInput value={description} onIonChange={e => setDescription(e.detail.value || '')} />\n          <IonLabel>Price: </IonLabel><IonInput value={price} onIonChange={e => setPrice(e.detail.value || '')} />\n          <IonLabel>Estimated Price: </IonLabel><IonInput value={priceEstimation} onIonChange={e => setPriceEstimation(e.detail.value || '')} />\n          <IonLabel>Owner: </IonLabel><IonInput value={ownerUsername} onIonChange={e => setOwner(e.detail.value || '')} />\n\n          <IonImg style={{width: \"400px\", height: \"400px\", margin: \"0 auto\"}} alt={\"No photo\"}\n              onClick = {() => {setPhotoToDelete(photos?.find(vd => vd.webviewPath === photoPath))}}\n              src={photoPath}\n          />\n          <IonFab horizontal=\"end\" >\n              <IonFabButton size=\"small\" color=\"danger\"\n                  onClick={() => {\n                      const photoTaken = takePhoto();\n                      photoTaken.then((data) => {\n                          setPhotoPath(data.webviewPath!);\n                      });\n                  }}>\n                <IonIcon icon={camera}/>\n              </IonFabButton>\n          </IonFab>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n\n          <MyMap lat={lat} lng={lng} onMapClick={setMapPosition} onMarkerClick={mapLog('onMarker')} ></MyMap>\n        <IonLoading isOpen={saving} />\n        {savingError && (\n          <div>{savingError.message || 'Failed to save item'}</div>\n        )}\n\n        <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n          <IonFabButton onClick={handleDelete}>\n            <IonIcon icon={trashBin} />\n          </IonFabButton>\n        </IonFab>\n\n        <IonActionSheet\n          isOpen={!!photoToDelete}\n            buttons={[\n              {\n                  text: \"Delete\",\n                  role: \"destructive\",\n                  icon: trash,\n                  handler: () => {\n                      if (photoToDelete) {\n                          deletePhoto(photoToDelete);\n                          setPhotoToDelete(undefined);\n                          setPhotoPath(\"\")\n                      }\n                  },\n              },\n              {\n                  text: \"Cancel\",\n                  role: \"cancel\",\n                  icon: close,\n              },\n            ]}\n            onDidDismiss={() => setPhotoToDelete(undefined)}\n        />\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ItemEdit;\n","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\ItemList.tsx",["92","93","94"],"import React, { useContext, useState, useEffect } from 'react';\nimport { RouteComponentProps, Redirect } from 'react-router';\nimport {\n  IonButton,\n  IonContent,\n  IonFab,\n  IonFabButton,\n  IonHeader,\n  IonIcon,\n  IonList, IonLoading,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonSearchbar,\n  IonItem,\n  IonSelect,\n  IonSelectOption,\n  IonLabel,\n  IonBadge\n} from '@ionic/react';\nimport { add } from 'ionicons/icons';\nimport Item from './Item';\nimport { getLogger } from '../core';\nimport { ItemContext } from './ItemProvider';\nimport { AuthContext } from '../auth'\nimport { IonInfiniteScroll, IonInfiniteScrollContent} from '@ionic/react';\nimport { ItemProps } from './ItemProps';\nimport { Network } from '@capacitor/core';\n\nconst log = getLogger('ItemList');\n\nlet NStatus = \"Online\";\n\nNetwork.addListener(\"networkStatusChange\", status => {\n  NStatus = status.connected === true ? \"Online\" : \"Offline\";\n  log(NStatus, \"in listener\");\n})\n\nconst ItemList: React.FC<RouteComponentProps> = ({ history }) => {\n\n  const [networkStatus, setNetworkStatus] = useState<string>(NStatus);\n  Network.addListener(\"networkStatusChange\", status => {\n    setNetworkStatus(status.connected === true ? \"Online\" : \"Offline\");\n    log(networkStatus, \"in listener\");\n  })\n\n  const { items, conflictualItems, fetching, fetchingError, savingPending, saveItem } = useContext(ItemContext);\n  const { logout } = useContext(AuthContext);\n\n  const[disableInfiniteScroll, setDisableInfiniteScroll] = useState<boolean>(false);\n  const[pos, setPos] = useState(5);\n  const[conflict, setConflict] = useState<boolean>(false);\n\n  const[filter, setFilter] = useState<string | undefined>(\"any price\");\n  const selectOptions = [\"<=500 EUR\", \">500 EUR\", \"any price\"];\n  const [searchText, setSearchText] = useState<string>(\"\");\n\n  const renderColor = () => {\n    return networkStatus === \"Online\" ? \"primary\" : \"danger\";\n  }\n\n  const renderStatus = () => {\n    return networkStatus;\n  }\n\n  useEffect(() => {\n    log(networkStatus, \"in useEffect()\");\n  }, [networkStatus]);\n\n  const networkStatusView = <IonBadge color = { renderColor() }>Network status: { renderStatus() }</IonBadge>\n\n  const [apartmentsShow, setApartmentsShow] = useState<ItemProps[]>([]);\n\n  const handleLogout = () => {\n    logout?.();\n    return <Redirect to={{pathname: \"/login\"}} />;\n  }\n\n  async function searchNext($event: CustomEvent<void>)\n    {\n      if(items && pos < items.length){\n        setApartmentsShow([...items.slice(0, 5+pos)]);\n        setPos(pos+5);\n      }\n      else{\n        setDisableInfiniteScroll(true);\n      }\n      log(\"items from\" + 0 + \"to \" + pos)\n      log(apartmentsShow)\n      await ($event.target as HTMLIonInfiniteScrollElement).complete();\n    }\n\n  log('render');\n\n  useEffect(() =>{\n    if(items?.length){\n      setApartmentsShow(items.slice(0, pos));\n    }\n  }, [items]);\n\n  //filter\n  useEffect(()=>{\n    if(filter && items){\n      if(filter === \"<=500 EUR\"){\n        setApartmentsShow(items.filter((item) => Number.parseInt(item.price) <= 500) );\n      }\n      else if(filter === \">500 EUR\"){\n        setApartmentsShow(items.filter((item) => Number.parseInt(item.price) > 500) );\n      }\n      else if(filter === \"any price\"){\n        setApartmentsShow(items);\n      }\n    }\n  }, [filter]);\n\n  //search\n  useEffect(()=>{\n    if(searchText === \"\" && items){\n      setApartmentsShow(items);\n\n    }\n    if(searchText && items){\n      setApartmentsShow(items.filter((item) => item.description.startsWith(searchText)));\n    }\n  },[searchText]);\n    \n  useEffect(() => {\n    if(savingPending === true){\n      setConflict(true);\n    }\n    else{\n      setConflict(false);\n    }\n  }, [savingPending]);\n\n  async function handleEdit(id : string | undefined) {\n    const item = conflictualItems?.find(it => it.id === id);\n    if(item && item.id){\n        console.log(item);\n        item.id = item.id.split('_')[0];\n        item.version = item.version+1;\n        console.log(item);\n        saveItem && saveItem(item);\n    }\n    return;\n\n  }\n\n  if(conflict === true){\n    return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Conflicts</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n          \n        <IonList>\n            {conflictualItems?.map((item: ItemProps) => \n                <Item key={item.id} id={item.id} description={item.description} \n                    price={item.price} priceEstimation={item.priceEstimation} ownerUsername={item.ownerUsername} \n                    version={item.version} status={item.status} lat={item.lat} lng={item.lng} photoPath={item.photoPath} \n                    onEdit = {id => handleEdit(id)}>\n                </Item>)}\n        </IonList>\n\n      </IonContent>\n    </IonPage>\n    )}\n\n  else\n  log(\"ITEMS: \", items);\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButton slot=\"end\" onClick = {handleLogout}>Logout</IonButton>\n          <IonTitle>EasyRENT</IonTitle>\n          { networkStatusView }\n        </IonToolbar>\n        <IonSearchbar value={searchText} debounce={500} onIonChange={(e) => setSearchText(e.detail.value!)}/>\n\n        <IonItem>\n            <IonLabel>Filter products by rating</IonLabel>\n            <IonSelect value={filter} onIonChange={(e) => setFilter(e.detail.value)}>\n                {selectOptions.map((option) => (\n                <IonSelectOption key={option} value={option}>\n                    {option}\n                </IonSelectOption>\n                ))}\n            </IonSelect>\n        </IonItem>\n      </IonHeader>\n      <IonContent>\n\n        <IonLoading isOpen={fetching} message=\"Fetching items\" />\n        {items && apartmentsShow.map((item: ItemProps) => {\n            return(\n            <IonList>\n              <Item key={item.id} id={item.id} description={item.description} \n                price={item.price} priceEstimation={item.priceEstimation} ownerUsername={item.ownerUsername} \n                version={item.version} status={item.status} lat={item.lat} lng={item.lng} photoPath={item.photoPath} \n                onEdit={id => history.push(`/item/${id}`)} />\n            </IonList>\n            );\n        })}\n\n        <IonInfiniteScroll threshold=\"75px\" disabled={disableInfiniteScroll} onIonInfinite={(e: CustomEvent<void>) => searchNext(e)}>\n            <IonInfiniteScrollContent loadingSpinner=\"bubbles\" loadingText=\"Loading for more items...\"/>\n        </IonInfiniteScroll>\n\n        {fetchingError && (\n          <div>{fetchingError.message || 'Failed to fetch items, showing in-memory saved items!'}</div>\n        )}\n        <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n          <IonFabButton onClick={() => history.push('/item')}>\n            <IonIcon icon={add} />\n          </IonFabButton>\n        </IonFab>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ItemList;\n","C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\auth\\PrivateRoute.tsx",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\auth\\Login.tsx",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\core\\index.tsx",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\todo\\Item.tsx",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\auth\\AuthApi.tsx",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\utilities\\MyMap.tsx",[],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\utilities\\mapsApiKey.ts",[],["95","96"],"C:\\Users\\Razvan\\Desktop\\Facultate\\Anul_3\\Mobile\\ionic_RentalApp\\src\\utilities\\usePhotoGallery.ts",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":125,"column":62,"nodeType":"103","endLine":125,"endColumn":69,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"102","line":126,"column":68,"nodeType":"103","endLine":126,"endColumn":75,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":212,"column":24,"nodeType":"108","messageId":"109","endLine":212,"endColumn":35,"fix":"110"},{"ruleId":"111","severity":1,"message":"112","line":246,"column":13,"nodeType":"113","messageId":"114","endLine":246,"endColumn":24},{"ruleId":"101","severity":1,"message":"115","line":43,"column":53,"nodeType":"103","endLine":43,"endColumn":55,"suggestions":"116"},{"ruleId":"101","severity":1,"message":"115","line":44,"column":56,"nodeType":"103","endLine":44,"endColumn":58,"suggestions":"117"},{"ruleId":"101","severity":1,"message":"118","line":45,"column":35,"nodeType":"103","endLine":45,"endColumn":58,"suggestions":"119"},{"ruleId":"111","severity":1,"message":"120","line":38,"column":26,"nodeType":"113","messageId":"114","endLine":38,"endColumn":34},{"ruleId":"111","severity":1,"message":"121","line":38,"column":36,"nodeType":"113","messageId":"114","endLine":38,"endColumn":49},{"ruleId":"101","severity":1,"message":"122","line":69,"column":6,"nodeType":"103","endLine":69,"endColumn":30,"suggestions":"123"},{"ruleId":"101","severity":1,"message":"124","line":99,"column":6,"nodeType":"103","endLine":99,"endColumn":13,"suggestions":"125"},{"ruleId":"101","severity":1,"message":"126","line":114,"column":6,"nodeType":"103","endLine":114,"endColumn":14,"suggestions":"127"},{"ruleId":"101","severity":1,"message":"126","line":125,"column":5,"nodeType":"103","endLine":125,"endColumn":17,"suggestions":"128"},{"ruleId":"97","replacedBy":"129"},{"ruleId":"99","replacedBy":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'token'. Either exclude it or remove the dependency array.","ArrayExpression",["133"],["134"],"@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"135","text":"136"},"@typescript-eslint/no-unused-vars","'deletedItem' is assigned a value but never used.","Identifier","unusedVar","React Hook useCallback has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["137"],["138"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["139"],"'deleting' is assigned a value but never used.","'savingPending' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'photoPath'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'pos'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setApartmentsShow' needs the current value of 'pos'.",["141"],"React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.",["142"],["143"],["131"],["132"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},[7110,7121],"[]",{"desc":"147","fix":"148"},{"desc":"147","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: []",{"range":"160","text":"136"},{"range":"161","text":"136"},"Update the dependencies array to be: [state]",{"range":"162","text":"163"},{"range":"164","text":"163"},"Update the dependencies array to be: [pendingAuthentication, state]",{"range":"165","text":"166"},"Update the dependencies array to be: [match.params.id, items, photoPath]",{"range":"167","text":"168"},"Update the dependencies array to be: [items, pos]",{"range":"169","text":"170"},"Update the dependencies array to be: [filter, items]",{"range":"171","text":"172"},"Update the dependencies array to be: [items, searchText]",{"range":"173","text":"174"},[4279,4286],[4356,4363],[1300,1302],"[state]",[1361,1363],[1401,1424],"[pendingAuthentication, state]",[2222,2246],"[match.params.id, items, photoPath]",[2830,2837],"[items, pos]",[3250,3258],"[filter, items]",[3495,3507],"[items, searchText]"]